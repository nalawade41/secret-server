{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for a secret API.",
        "title": "My API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "get the status of server.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Server Health"
                ],
                "summary": "Show the status of server.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/secret": {
            "post": {
                "description": "Add a new secret with expiration controls",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    " application/xml"
                ],
                "tags": [
                    "secret"
                ],
                "summary": "Add a new secret",
                "operationId": "addSecret",
                "parameters": [
                    {
                        "description": "Create Secret Message",
                        "name": "secret",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateSecretRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/response.SecretResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "405": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/secret/{hash}": {
            "get": {
                "description": "Returns a single secret",
                "produces": [
                    "application/json",
                    " application/xml"
                ],
                "tags": [
                    "Secret"
                ],
                "summary": "Find a secret by hash",
                "operationId": "getSecretByHash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unique hash to identify the secret",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/response.SecretResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request, hash missing",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "404": {
                        "description": "Secret not found",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "requests.CreateSecretRequest": {
            "type": "object",
            "properties": {
                "expireAfter": {
                    "type": "integer"
                },
                "expireAfterViews": {
                    "type": "integer"
                },
                "secret": {
                    "type": "string"
                }
            }
        },
        "response.SecretResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "expiresAt": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "remainingViews": {
                    "type": "integer"
                },
                "secretText": {
                    "type": "string"
                }
            }
        },
        "responses.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}